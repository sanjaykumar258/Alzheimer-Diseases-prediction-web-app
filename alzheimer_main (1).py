# -*- coding: utf-8 -*-
"""Alzheimer_main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GGZST8866SwFLt8vdycvAQaQNCgL7f2-
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Data collection and analysis
Alzheimer dataset

"""

Alzheimer_dataset = pd.read_csv('/content/alzheimer.csv')

Alzheimer_dataset.head()

Alzheimer_dataset.fillna(0,inplace=True)

Alzheimer_dataset.shape

Alzheimer_dataset.describe()

Alzheimer_dataset['Group'].value_counts()

Alzheimer_dataset.groupby('Group').mean

x = Alzheimer_dataset.drop(columns = ['Group','M/F'], axis='1')
y = Alzheimer_dataset['Group']

print(x)



print(y)

"""Train Test spilt"""

x_train, x_test, y_train, y_test =train_test_split(x,y, test_size =0.2,stratify=y,random_state=2)

print(x.shape, x_train.shape, x_test.shape)

"""Training Model"""

classifier =svm.SVC(kernel='linear')

classifier.fit(x_train, y_train)

"""Model evaluvation
accuracy score

"""

x_train_prediction = classifier.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction,y_train)

print('Accuracy score of the traing data:', training_data_accuracy)

x_test_prediction = classifier.predict(x_test)
test_data_accuracy = accuracy_score(x_test_prediction,y_test)

print('Accuracy score of the test data:', test_data_accuracy)

"""Makeing a predictive system"""

input_data =(88,12,4,30,0,1336,0.738,1.313)
input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = classifier.predict(input_data_reshaped )
print(prediction)

if (prediction[0]=="Demented"):
  print("Alzheimer disease person")
else:
  print("Non Alzheimer disease person")

"""Saving the trained model"""

import pickle

filename = 'trained_model.sav'
pickle.dump(classifier, open(filename,'wb'))

loaded_model = pickle.load(open('trained_model.sav','rb'))

input_data =(88,12,4,26,0.5,1483,0.709,1.184)
input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = loaded_model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]=="Demented"):
  print("Alzheimer disease person")
else:
  print("Non Alzheimer disease person")